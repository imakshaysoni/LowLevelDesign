# Chain of Responsibilityclass InfoLogger:    def __init__(self, nextLogger):        self.next_logger = nextLogger    def log(self, level, message):        if level == "info":            print(f"Info Log Logged: {message}")        else:            if self.next_logger:                return self.next_logger.log(level, message)            print("Not able to fulfill request.")class DebugLogger(InfoLogger):    def __init__(self, nextLogger):        self.next_logger = nextLogger    def log(self, level, message):        if level == "debug":            print(f"Debug Logger Logged, {message}")        else:            if self.next_logger:                return self.next_logger.log(level, message)            print("Not able to fulfill request.")class ErrorLogger(DebugLogger):    def __init__(self, nextLogger):        self.next_logger = None    def log(self, level, message):        if level == "error":            print(f"Error Logger Logged, {message}")        else:            print("Not able to fulfill request.")